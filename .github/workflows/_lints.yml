name: Reusable workflow for lints

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  clippy:
    name: Clippy (MSRV)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.target }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install build dependencies
        run: sudo apt update && sudo apt install libudev-dev
      - name: Run Clippy
        uses: auguwu/clippy-action@94a9ff2f6920180b89e5c03d121d0af04a9d3e03 # 1.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ inputs.target }}
          all-features: true
          deny: warnings
          # Broken until https://github.com/auguwu/clippy-action/issues/117 is resolved.
          # args: --all-targets

  clippy-beta:
    name: Clippy (beta)
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: ${{ inputs.target }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install build dependencies
        run: sudo apt update && sudo apt install libudev-dev
      - uses: dtolnay/rust-toolchain@beta
        id: toolchain
        with:
          components: clippy
      - run: rustup override set ${{ steps.toolchain.outputs.name }}
      - name: Run Clippy (beta)
        uses: auguwu/clippy-action@94a9ff2f6920180b89e5c03d121d0af04a9d3e03 # 1.4.0
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ inputs.target }}
          all-features: true
          warn: clippy::all
          # Broken until https://github.com/auguwu/clippy-action/issues/117 is resolved.
          # args: --all-targets

  doc-links:
    name: Intra-doc links
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.target }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Install build dependencies
        run: sudo apt update && sudo apt install libudev-dev
      # Use nightly Rust (as docs.rs does), because some of our dependencies enable the
      # `doc_cfg` feature when the `docsrs` config option is set.
      - uses: dtolnay/rust-toolchain@nightly
        id: toolchain
        with:
          targets: thumbv7em-none-eabihf
      - run: rustup override set ${{ steps.toolchain.outputs.name }}
      - run: cargo fetch
      # Requires #![deny(rustdoc::broken_intra_doc_links)] in crates.
      - name: Check intra-doc links
        run: cargo doc --workspace --document-private-items
        env:
          RUSTDOCFLAGS: --cfg docsrs

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.target }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: cargo fmt --all --check
